*,
*:before,
*:after {
	padding: 0;
	margin: 0;
	border: 0;
	box-sizing:border-box;
}
a {
	text-decoration: none;
}
ul,
ol,
li {
	list-style: none;
}
img {
	vertical-align: top;
}
h1,
h2,
h3,
h4,
h5,
h6 {
	font-weight: inherit;
	font-size: inherit;
}
html,body {
	height: 100%;
	line-height: 1;
	font-size: 14px;
	background-color: #333;
	font-family: Arial, "Helvetica Neue", Helvetica, sans-serif;
}
/* -----------------------*/

.wrapper {
}
.form,
h1 {
	max-width: 550px;
	margin: 0px auto;
	color: #fff;
	padding: 30px 0;
}

.form * {
	outline: none;
	/* - outline:none; - отключает появляющиеся линии, когда кликаешь по объекту или попадаешь на него с Tab */
}

.form__body {
position: relative;
}
.form__body::after{
	content: '';
	position: absolute;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	background: rgba(51, 51, 51, 0.9) url('../img/One_Piece_19.jpg') center / 550px no-repeat;
opacity:0;
visibility: hidden;
transition: all 0.5s ease 0s;
}


.form__body._sending::after{
	opacity:1;
visibility: visible;
}



.form__title {
	font-size: 40px;
	font-weight: 700;
	margin: 0px 0px 30px 0px;
}
.form__item {
	margin: 0px 0px 20px 0px;
}
.form__label {
	font-size: 18px;
	display: block;
	margin: 0px 0px 10px 0px;
}
.form__input {
	height: 50px;
	padding: 0px 20px;
	border-radius: 5px;
	width: 100%;
	font-size: 18px;
	transition: all 0.5s ease 0s;
}

.form__input:focus{
	box-shadow: 0 0 15px #7a956b;
}
.form__input._error{
	box-shadow: 0 0 15px red;
}

textarea.form__input {
	min-height: 120px;
	resize: vertical;
	/*- css cв-во resize: vertical; - позволяет менять размеры поля пользователю только по вертикали, по умолчанию, меняется и по горизонтали тоже*/
	padding: 20px;
}
.options {
padding: 10px 0px 0px 0px;
}
.options__item {
	margin: 0px 0px 10px 0px;
}
.options__input {
	 display: none; 
	/* Скрываем кружки радиокнопок */
}

.options__input:checked + .options__label::after {
	transform: scale(1);
}
/* - .class:checked{стиль} - задаёт стиль <input type="radio">, <input type="checkbox"> или <option> внутри <select>, если они выбраны, то есть если .checkbox:checked {margin:100px;}, то у чекбокса появляется отступы с галочкой, а без неё пропадают! */
/* Таким макаром задаётся стиль ближайшему, после выбранной радиокнопки, .options__label::after */
.options__label {
	display: inline-flex;
	/* -display: inline-flex; - то же что и display:flex;, но не распростаняется на всю ширину */
	font-size: 18px;
	line-height: 140%;
	align-items: center;
	position: relative;
	cursor: pointer;
}
.options__label::before {
content: '';
align-self: flex-start;
flex: 0 0 24px;
/* -в данном случае используется flex вместо width*/
height: 24px;
background-color: #fff;
border-radius: 50%;
margin: 0px 10px 0px 0px;
}
.options__label::after {
transition: transform 0.3s ease 0s;
content: '';
position: absolute;
top: 4px;
left: 4px;
width: 16px;
height: 16px;
background-color: #7a956b;
border-radius: 50%;
transform: scale(0);
/* transform: scale(0); - масштаб блока, scale(0.5)- уменьшит размер вдвое */
}
.select {
	height: 50px;
	padding: 0px 20px;
	border-radius: 5px;
	width: 100%;
	font-size: 18px;

}
.file {
}
.file__item {
	position: relative;
}
.file__input {
	position: absolute;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	opacity: 0;
	font-size: 0;
	cursor: pointer;
	/*- сss св-во cursor: pointer; - делает курсор, в блоке с этим св-вом, в виде руки */
}
/** делаем тег <input type='file'> полностью прозрачным и размещаем во весь родительский блок, а кнопка "выбрать" оказывается под прозрачным блоком, и мы видим кнопку, а нажимаем на input */
.file__button {
	display: inline-flex;
	min-height: 40px;
	border-radius: 30px;
	justify-content: center;
	align-items: center;
	background-color: #77608d;
	padding: 0px 20px;
}
.file__preview {
	display: inline-block;
	max-width: 100px;
	padding: 10px 0px 0px 0px;
}
.file__preview img {
	max-width: 100%;
}
.checkbox {
}

.checkbox._error .checkbox__label::before {
	box-shadow: 0 0 15px red;
}

.checkbox__input {
	display: none;
}
.checkbox__input:checked + .checkbox__label::after {
	transform: scale(1);
}


.checkbox__label {
	font-size: 16px;
	line-height: 140%;
	display: inline-flex;
	align-items: center;
	position: relative;
	cursor: pointer;
}

.checkbox__label::before{
	content: '';
	align-self: flex-start;
flex: 0 0 24px;
height: 24px;
background-color: #fff;
border-radius: 4px;
margin: 0px 10px 0px 0px;
}

.checkbox__label::after{
	transition: transform 0.5s ease 0s;
	content: '';
	width: 16px;
	height: 16px;
	position: absolute;
	top: 4px;
	left: 4px;
	background-color: #7a956b;
	border-radius: 4px;
	transform: scale(0);
}

.checkbox__label a{
color: #7a956b;
}
.form__button {
	width: 100%;
	display: flex;
	justify-content: center;
	align-items: center;
	min-height: 60px;
	background-color: #7a956b;
	color: #fff;
	font-size: 18px;
	text-transform: uppercase;
	letter-spacing: 2px;
	font-weight: 700;
	cursor: pointer;
	border-radius: 20px;
	box-shadow: 0 5px 0 #161b13;
	transition: background-color 0.5s ease 0s;
	position: relative;
}
.form__button:hover {
	background-color: #4F6146;
}

.form__button:active {
	top: 3px;
	box-shadow: 0 2px 0 #161b13;
}

/*- .block:active {стили} - срабатывают стили когда на block фокус или клик */




.zaza {
	width: 100%;
	margin: 20px 0px 0px 0px;
	display: block;
	justify-content: center;
	align-items: center;
	min-height: 60px;
	background-color: #7a956b;
	color: #fff;
	font-size: 18px;
	text-transform: uppercase;
	letter-spacing: 2px;
	font-weight: 700;
	cursor: pointer;
	border-radius: 20px;
	box-shadow: 0 5px 0 #161b13;
	transition: background-color 0.5s ease 0s;
	
}










